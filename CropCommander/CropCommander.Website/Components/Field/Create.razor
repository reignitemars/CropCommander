@using CropCommander.Website.Services
@using CropCommander.Website.Validators
@using Field = CropCommander.Common.Models.Field
@inject FieldService FieldService
@inject CreateValidator Validator

<MudDialog Class="dialog-styled" Style="min-width: 30%; min-height: 20%">
    <TitleContent>
        <MudText Typo="Typo.h6" Align="Align.Center" Inline="true">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3"/>
            Field - Add
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudStack Spacing="3" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch">
            <MudForm @ref="_form" Model="_field" Validation="@(Validator.ValidateValue)">
                <MudTextField @bind-Value="_field.FieldName" 
                              Label="Field Name" 
                              Required="true" 
                              Immediate="true"
                              For="@(() => _field.FieldName)" 
                              Class="mb-3" />
                <MudNumericField T="double"
                                 @bind-Value="_field.FieldArea" 
                                 Label="Field Area (ha)" 
                                 Min="0" 
                                 Required="true"
                                 For="@(() => _field.FieldArea)"
                                 Class="mb-3" />
                <MudTextField @bind-Value="_field.CropName" 
                              Label="Crop Name" 
                              Required="true"
                              For="@(() => _field.CropName)" />
            </MudForm>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   OnClick="SaveField" 
                   Style="min-width: 120px;" 
                   Disabled="_isFieldNameInvalid">Save</MudButton>
        <MudButton Variant="Variant.Text" 
                   OnClick="CloseDialog" 
                   Style="min-width: 120px;">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance CreateDialogInstance { get; set; }
    
    private Field _field = new();
    private bool _isFieldNameInvalid;
    
    private MudForm _form;
    
    private async Task SaveField()
    {
        try
        {
            await _form.Validate();
            if (!_form.IsValid)
                return;
            
            await FieldService.AddFieldAsync(_field);
            CreateDialogInstance.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
        
    }

    private void CloseDialog()
        => CreateDialogInstance.Close(DialogResult.Cancel());
}